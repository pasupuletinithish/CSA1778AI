def print_board(board):
    for i in range(8):
        for j in range(8):
            print(board[i][j], end=' ')
        print()
    print()

def is_valid(board, row, col):
    # check row on left side
    for i in range(col):
        if board[row][i] == 1:
            return False
    # check upper diagonal on left side
    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False
    # check lower diagonal on left side
    for i, j in zip(range(row, 8, 1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False
    return True

def solve_8_queen(board, col):
    if col == 8:
        print_board(board)
        return True
    res = False
    for i in range(8):
        if is_valid(board, i, col):
            board[i][col] = 1
            res = solve_8_queen(board, col + 1) or res
            board[i][col] = 0
    return res

board = [[0 for x in range(8)] for y in range(8)]
solve_8_queen(board, 0)
