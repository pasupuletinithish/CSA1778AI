def dfs(graph, start_node, visited=None):
    """
    Perform depth-first search on a graph, starting from the start_node.
    The graph is represented as a dictionary where the keys are the nodes and the values are lists of neighbors.
    """
    if visited is None:
        visited = set()

    # Mark the source node as visited
    visited.add(start_node)

    # Get all neighbors of the current node
    neighbors = graph[start_node]

    # Recursively call DFS on all neighbors that haven't been visited yet
    for neighbor in neighbors:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

    return visited
